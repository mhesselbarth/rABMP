// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// rcpp_calculate_ci
NumericVector rcpp_calculate_ci(NumericMatrix matrix, float alpha, float beta, int max_dist);
RcppExport SEXP _rabmp_rcpp_calculate_ci(SEXP matrixSEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP max_distSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type matrix(matrixSEXP);
    Rcpp::traits::input_parameter< float >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< float >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< int >::type max_dist(max_distSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_calculate_ci(matrix, alpha, beta, max_dist));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_calculate_distance_probability
NumericVector rcpp_calculate_distance_probability(float beta, float theta, int max_dist);
RcppExport SEXP _rabmp_rcpp_calculate_distance_probability(SEXP betaSEXP, SEXP thetaSEXP, SEXP max_distSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< float >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< float >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type max_dist(max_distSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_calculate_distance_probability(beta, theta, max_dist));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_calculate_mortality_probs
NumericVector rcpp_calculate_mortality_probs(NumericVector dbh, float int_early, float int_late, float dbh_early, float dbh_late, float dinc);
RcppExport SEXP _rabmp_rcpp_calculate_mortality_probs(SEXP dbhSEXP, SEXP int_earlySEXP, SEXP int_lateSEXP, SEXP dbh_earlySEXP, SEXP dbh_lateSEXP, SEXP dincSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type dbh(dbhSEXP);
    Rcpp::traits::input_parameter< float >::type int_early(int_earlySEXP);
    Rcpp::traits::input_parameter< float >::type int_late(int_lateSEXP);
    Rcpp::traits::input_parameter< float >::type dbh_early(dbh_earlySEXP);
    Rcpp::traits::input_parameter< float >::type dbh_late(dbh_lateSEXP);
    Rcpp::traits::input_parameter< float >::type dinc(dincSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_calculate_mortality_probs(dbh, int_early, int_late, dbh_early, dbh_late, dinc));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_calculate_number_seeds
NumericVector rcpp_calculate_number_seeds(NumericVector dbh, float str);
RcppExport SEXP _rabmp_rcpp_calculate_number_seeds(SEXP dbhSEXP, SEXP strSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type dbh(dbhSEXP);
    Rcpp::traits::input_parameter< float >::type str(strSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_calculate_number_seeds(dbh, str));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_create_seedlings
NumericMatrix rcpp_create_seedlings(NumericMatrix coords, NumericVector number, float beta, int max_dist);
RcppExport SEXP _rabmp_rcpp_create_seedlings(SEXP coordsSEXP, SEXP numberSEXP, SEXP betaSEXP, SEXP max_distSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type coords(coordsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type number(numberSEXP);
    Rcpp::traits::input_parameter< float >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< int >::type max_dist(max_distSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_create_seedlings(coords, number, beta, max_dist));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_random_distance
NumericVector rcpp_random_distance(int number_seeds, float beta, int max_dist);
RcppExport SEXP _rabmp_rcpp_random_distance(SEXP number_seedsSEXP, SEXP betaSEXP, SEXP max_distSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type number_seeds(number_seedsSEXP);
    Rcpp::traits::input_parameter< float >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< int >::type max_dist(max_distSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_random_distance(number_seeds, beta, max_dist));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rabmp_rcpp_calculate_ci", (DL_FUNC) &_rabmp_rcpp_calculate_ci, 4},
    {"_rabmp_rcpp_calculate_distance_probability", (DL_FUNC) &_rabmp_rcpp_calculate_distance_probability, 3},
    {"_rabmp_rcpp_calculate_mortality_probs", (DL_FUNC) &_rabmp_rcpp_calculate_mortality_probs, 6},
    {"_rabmp_rcpp_calculate_number_seeds", (DL_FUNC) &_rabmp_rcpp_calculate_number_seeds, 2},
    {"_rabmp_rcpp_create_seedlings", (DL_FUNC) &_rabmp_rcpp_create_seedlings, 4},
    {"_rabmp_rcpp_random_distance", (DL_FUNC) &_rabmp_rcpp_random_distance, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_rabmp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
