// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// rcpp_calculate_ci
NumericVector rcpp_calculate_ci(NumericMatrix matrix, double max_dist, double alpha, double beta);
RcppExport SEXP _rabmp_rcpp_calculate_ci(SEXP matrixSEXP, SEXP max_distSEXP, SEXP alphaSEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type matrix(matrixSEXP);
    Rcpp::traits::input_parameter< double >::type max_dist(max_distSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_calculate_ci(matrix, max_dist, alpha, beta));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_calculate_mortality_probs
NumericVector rcpp_calculate_mortality_probs(StringVector species, NumericVector dbh);
RcppExport SEXP _rabmp_rcpp_calculate_mortality_probs(SEXP speciesSEXP, SEXP dbhSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< StringVector >::type species(speciesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dbh(dbhSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_calculate_mortality_probs(species, dbh));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_calculate_random_coords
NumericVector rcpp_calculate_random_coords(double n, String species, int n_proposed, double max_dist);
RcppExport SEXP _rabmp_rcpp_calculate_random_coords(SEXP nSEXP, SEXP speciesSEXP, SEXP n_proposedSEXP, SEXP max_distSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type n(nSEXP);
    Rcpp::traits::input_parameter< String >::type species(speciesSEXP);
    Rcpp::traits::input_parameter< int >::type n_proposed(n_proposedSEXP);
    Rcpp::traits::input_parameter< double >::type max_dist(max_distSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_calculate_random_coords(n, species, n_proposed, max_dist));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_calculate_seedlings
NumericMatrix rcpp_calculate_seedlings(NumericMatrix coords, NumericVector number, StringVector species);
RcppExport SEXP _rabmp_rcpp_calculate_seedlings(SEXP coordsSEXP, SEXP numberSEXP, SEXP speciesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type coords(coordsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type number(numberSEXP);
    Rcpp::traits::input_parameter< StringVector >::type species(speciesSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_calculate_seedlings(coords, number, species));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rabmp_rcpp_calculate_ci", (DL_FUNC) &_rabmp_rcpp_calculate_ci, 4},
    {"_rabmp_rcpp_calculate_mortality_probs", (DL_FUNC) &_rabmp_rcpp_calculate_mortality_probs, 2},
    {"_rabmp_rcpp_calculate_random_coords", (DL_FUNC) &_rabmp_rcpp_calculate_random_coords, 4},
    {"_rabmp_rcpp_calculate_seedlings", (DL_FUNC) &_rabmp_rcpp_calculate_seedlings, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_rabmp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
