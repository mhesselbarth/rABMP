// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// rcpp_calculate_ci
NumericVector rcpp_calculate_ci(NumericMatrix matrix, double alpha, double beta, double max_dist);
RcppExport SEXP _rabmp_rcpp_calculate_ci(SEXP matrixSEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP max_distSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type matrix(matrixSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type max_dist(max_distSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_calculate_ci(matrix, alpha, beta, max_dist));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_calculate_distance
NumericVector rcpp_calculate_distance(double current_x, double current_y, NumericVector other_x, NumericVector other_y);
RcppExport SEXP _rabmp_rcpp_calculate_distance(SEXP current_xSEXP, SEXP current_ySEXP, SEXP other_xSEXP, SEXP other_ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type current_x(current_xSEXP);
    Rcpp::traits::input_parameter< double >::type current_y(current_ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type other_x(other_xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type other_y(other_ySEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_calculate_distance(current_x, current_y, other_x, other_y));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_calculate_ci_sugar
NumericVector rcpp_calculate_ci_sugar(NumericMatrix matrix, double alpha, double beta, double max_dist);
RcppExport SEXP _rabmp_rcpp_calculate_ci_sugar(SEXP matrixSEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP max_distSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type matrix(matrixSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type max_dist(max_distSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_calculate_ci_sugar(matrix, alpha, beta, max_dist));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_calculate_distance_probability
NumericVector rcpp_calculate_distance_probability(double beta, double theta, int max_dist);
RcppExport SEXP _rabmp_rcpp_calculate_distance_probability(SEXP betaSEXP, SEXP thetaSEXP, SEXP max_distSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type max_dist(max_distSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_calculate_distance_probability(beta, theta, max_dist));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_calculate_mortality_probs
NumericVector rcpp_calculate_mortality_probs(StringVector species, NumericVector dbh, double int_beech_early, double dbh_beech_early, double int_beech_late, double dbh_beech_late, double dinc_beech, double int_ash, double dbh_ash, double int_others, double dbh_others);
RcppExport SEXP _rabmp_rcpp_calculate_mortality_probs(SEXP speciesSEXP, SEXP dbhSEXP, SEXP int_beech_earlySEXP, SEXP dbh_beech_earlySEXP, SEXP int_beech_lateSEXP, SEXP dbh_beech_lateSEXP, SEXP dinc_beechSEXP, SEXP int_ashSEXP, SEXP dbh_ashSEXP, SEXP int_othersSEXP, SEXP dbh_othersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< StringVector >::type species(speciesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dbh(dbhSEXP);
    Rcpp::traits::input_parameter< double >::type int_beech_early(int_beech_earlySEXP);
    Rcpp::traits::input_parameter< double >::type dbh_beech_early(dbh_beech_earlySEXP);
    Rcpp::traits::input_parameter< double >::type int_beech_late(int_beech_lateSEXP);
    Rcpp::traits::input_parameter< double >::type dbh_beech_late(dbh_beech_lateSEXP);
    Rcpp::traits::input_parameter< double >::type dinc_beech(dinc_beechSEXP);
    Rcpp::traits::input_parameter< double >::type int_ash(int_ashSEXP);
    Rcpp::traits::input_parameter< double >::type dbh_ash(dbh_ashSEXP);
    Rcpp::traits::input_parameter< double >::type int_others(int_othersSEXP);
    Rcpp::traits::input_parameter< double >::type dbh_others(dbh_othersSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_calculate_mortality_probs(species, dbh, int_beech_early, dbh_beech_early, int_beech_late, dbh_beech_late, dinc_beech, int_ash, dbh_ash, int_others, dbh_others));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_create_seedlings
NumericMatrix rcpp_create_seedlings(NumericMatrix coords, NumericVector number, StringVector species);
RcppExport SEXP _rabmp_rcpp_create_seedlings(SEXP coordsSEXP, SEXP numberSEXP, SEXP speciesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type coords(coordsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type number(numberSEXP);
    Rcpp::traits::input_parameter< StringVector >::type species(speciesSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_create_seedlings(coords, number, species));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_random_distance
NumericVector rcpp_random_distance(int number_seeds, String species, int max_dist);
RcppExport SEXP _rabmp_rcpp_random_distance(SEXP number_seedsSEXP, SEXP speciesSEXP, SEXP max_distSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type number_seeds(number_seedsSEXP);
    Rcpp::traits::input_parameter< String >::type species(speciesSEXP);
    Rcpp::traits::input_parameter< int >::type max_dist(max_distSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_random_distance(number_seeds, species, max_dist));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rabmp_rcpp_calculate_ci", (DL_FUNC) &_rabmp_rcpp_calculate_ci, 4},
    {"_rabmp_rcpp_calculate_distance", (DL_FUNC) &_rabmp_rcpp_calculate_distance, 4},
    {"_rabmp_rcpp_calculate_ci_sugar", (DL_FUNC) &_rabmp_rcpp_calculate_ci_sugar, 4},
    {"_rabmp_rcpp_calculate_distance_probability", (DL_FUNC) &_rabmp_rcpp_calculate_distance_probability, 3},
    {"_rabmp_rcpp_calculate_mortality_probs", (DL_FUNC) &_rabmp_rcpp_calculate_mortality_probs, 11},
    {"_rabmp_rcpp_create_seedlings", (DL_FUNC) &_rabmp_rcpp_create_seedlings, 3},
    {"_rabmp_rcpp_random_distance", (DL_FUNC) &_rabmp_rcpp_random_distance, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_rabmp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
